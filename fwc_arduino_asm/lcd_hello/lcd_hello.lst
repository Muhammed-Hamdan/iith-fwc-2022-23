
AVRA   Ver. 1.3.0 lcd_hello.asm Tue Aug 16 16:34:42 2022


         ;lcd_hello.asm
          .list
         
          .def lcd_data_reg = r19
         
          .equ cmd_4bit2line = 0x28
          .equ cmd_entrymode = 0x06
          .equ cmd_displayon = 0x0E
          .equ cmd_cleardisplay = 0x01
          .equ cmd_firstline = 0x80
         
         
          .equ en_pin = 6
          .equ rs_pin = 7
         
         ;Initialize system status
C:000000 e000      ldi r16, 0
C:000001 bf0f      out SREG, r16
         ;Initialize SP
C:000002 e008      ldi r16, high(RAMEND)
C:000003 bf0e      out SPH, r16
C:000004 ef0f      ldi r16, low(RAMEND)
C:000005 bf0d      out SPL, r16
C:000006 d005      rcall gpio_init
C:000007 d007      rcall lcd_init
C:000008 eae4      ldi zl, low(2*hello_str)
C:000009 e0f0      ldi zh, high(2*hello_str)
C:00000a d01a      rcall lcd_print_str
          end:
C:00000b cfff      rjmp end
         
          gpio_init:
         ; d2, d3, d4, d5, d6, d7 output
C:00000c ef0c      ldi r16, 0b11111100
C:00000d b90a      out DDRD, r16
C:00000e 9508      ret
         
          lcd_init:
         ; Initially send upper byte for switch to 4_bit mode
C:00000f e238      ldi lcd_data_reg, cmd_4bit2line
C:000010 985f      cbi PORTD, rs_pin
C:000011 2f13      mov r17, lcd_data_reg
C:000012 7f10      andi r17, 0xf0
C:000013 9516      lsr r17
C:000014 9516      lsr r17
C:000015 b12b      in r18, PORTD
C:000016 7c23      andi r18, ~(0b00111100)
C:000017 2b21      or r18, r17
C:000018 b92b      out PORTD, r18
C:000019 d02a      rcall pulse_en
         
C:00001a e238      ldi lcd_data_reg, cmd_4bit2line
C:00001b d00f      rcall lcd_write_cmd
C:00001c e036      ldi lcd_data_reg, cmd_entrymode
C:00001d d00d      rcall lcd_write_cmd
C:00001e e03e      ldi lcd_data_reg, cmd_displayon
C:00001f d00b      rcall lcd_write_cmd
C:000020 e031      ldi lcd_data_reg, cmd_cleardisplay
C:000021 d009      rcall lcd_write_cmd
C:000022 e830      ldi lcd_data_reg, cmd_firstline
C:000023 d007      rcall lcd_write_cmd
C:000024 9508      ret
         
          lcd_print_str:
          lcd_print_str_loop:
C:000025 9135      lpm lcd_data_reg, z+
C:000026 3030      cpi lcd_data_reg, 0
C:000027 f011      breq lcd_print_str_return
C:000028 d005      rcall lcd_write_data
C:000029 cffb      rjmp lcd_print_str_loop
          lcd_print_str_return:
C:00002a 9508      ret
         
          lcd_write_cmd:
C:00002b 985f      cbi PORTD, rs_pin
C:00002c d004      rcall lcd_latch_data
C:00002d 9508      ret
         
          lcd_write_data:
C:00002e 9a5f      sbi PORTD, rs_pin
C:00002f d001      rcall lcd_latch_data
C:000030 9508      ret
         
          lcd_latch_data:
C:000031 2f13      mov r17, lcd_data_reg
C:000032 7f10      andi r17, 0xf0
C:000033 9516      lsr r17
C:000034 9516      lsr r17
C:000035 b12b      in r18, PORTD
C:000036 7c23      andi r18, ~(0b00111100)
C:000037 2b21      or r18, r17
C:000038 b92b      out PORTD, r18
C:000039 d00a      rcall pulse_en
C:00003a 2f13      mov r17, lcd_data_reg
C:00003b 701f      andi r17, 0x0f
C:00003c 0f11      lsl r17
C:00003d 0f11      lsl r17
C:00003e b12b      in r18, PORTD
C:00003f 7c23      andi r18, ~(0b00111100)
C:000040 2b21      or r18, r17
C:000041 b92b      out PORTD, r18
C:000042 d001      rcall pulse_en
C:000043 9508      ret
         
          pulse_en:
C:000044 9a5e      sbi PORTD, en_pin
C:000045 d003      rcall delay_en
C:000046 985e      cbi PORTD, en_pin
C:000047 d001      rcall delay_en
C:000048 9508      ret
         
          delay_en:
C:000049 e840      ldi r20, 0x80
          delay_en_loop1:
C:00004a e000      ldi r16, 0x00
          delay_en_loop2:
C:00004b 950a      dec r16
C:00004c 3000      cpi r16, 0x00
C:00004d f7e9      brne delay_en_loop2
C:00004e 954a      dec r20
C:00004f 3040      cpi r20, 0x00
C:000050 f7c9      brne delay_en_loop1
C:000051 9508      ret
         
          hello_str:
          .db "Hello world!",0x00
C:000052 48656C6C6F20776F726C64210000 ; zero byte added


Segment usage:
   Code      :        89 words (178 bytes)
   Data      :         0 bytes
   EEPROM    :         0 bytes

Assembly completed with no errors.
